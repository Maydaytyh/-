#include<bits/stdc++.h>
#include<cmath>
#include<algorithm>
#define maxn 1000005
#define mem0(a) memset(a,0,sizeof a)
using namespace std;
int wa[maxn],wb[maxn],wv[maxn],wss[maxn],sa[maxn];
//wa，wb,wss就是三个辅助数组，wv是为了使程序看起来简洁，相当于代替x[y[i]].
int cmp(int *r,int a,int b,int l)
{return r[a]==r[b]&&r[a+l]==r[b+l];}
void da(int *r,int *sa,int n,int m)
{
     int i,j,p,*x=wa,*y=wb,*t;
     for(i=0;i<m;i++) wss[i]=0;
     for(i=0;i<n;i++) wss[x[i]=r[i]]++;
     for(i=1;i<m;i++) wss[i]+=wss[i-1];
     for(i=n-1;i>=0;i--) sa[--wss[x[i]]]=i;
     for(j=1,p=1;p<n;j*=2,m=p)
     {
       for(p=0,i=n-j;i<n;i++) y[p++]=i;
       for(i=0;i<n;i++) if(sa[i]>=j) y[p++]=sa[i]-j;
       for(i=0;i<n;i++) wv[i]=x[y[i]];
       for(i=0;i<m;i++) wss[i]=0;
       for(i=0;i<n;i++) wss[wv[i]]++;
       for(i=1;i<m;i++) wss[i]+=wss[i-1];
       for(i=n-1;i>=0;i--) sa[--wss[wv[i]]]=y[i];
       for(t=x,x=y,y=t,p=1,x[sa[0]]=0,i=1;i<n;i++)
       x[sa[i]]=cmp(y,sa[i-1],sa[i],j)?p-1:p++;
     }
     return;
}
int rak[maxn],height[maxn];
void calheight(int *r,int *sa,int n)
{
     int i,j,k=0;
     for(i=1;i<=n;i++) rak[sa[i]]=i;
     for(i=0;i<n;height[rak[i++]]=k)
     for(k?k--:0,j=sa[rak[i]-1];r[i+k]==r[j+k];k++);
     return;
}
int RMQ[maxn];
int mm[maxn];
int best[20][maxn];
void initRMQ(int n)
{
     int i,j,a,b;
     for(mm[0]=-1,i=1;i<=n;i++)
     mm[i]=((i&(i-1))==0)?mm[i-1]+1:mm[i-1];
     for(i=1;i<=n;i++) best[0][i]=i;
     for(i=1;i<=mm[n];i++)
     for(j=1;j<=n+1-(1<<i);j++)
     {
       a=best[i-1][j];
       b=best[i-1][j+(1<<(i-1))];
       if(RMQ[a]<RMQ[b]) best[i][j]=a;
       else best[i][j]=b;
     }
     return;
}
int askRMQ(int a,int b)
{
    int t;
    t=mm[b-a+1];b-=(1<<t)-1;
    a=best[t][a];b=best[t][b];
    return RMQ[a]<RMQ[b]?a:b;
}
int lcp(int a,int b)
{
    int t;
    a=rak[a];b=rak[b];
    if(a>b) {t=a;a=b;b=t;}
    return(height[askRMQ(a+1,b)]);
}
char str[maxn],str1[maxn];
int s[maxn*2];
int main()
{
    scanf("%s",str+1);
    scanf("%s",str1+1);
    int l1=strlen(str+1),l2=strlen(str1+1);
    for(int i=1;i<=l1;i++) s[i]=str[i];
    s[l1]=0;
    for(int i=1;i<=l2;++i) s[l1+i]=str1[i];
    int n=l1+l2+1;
    s[n]=0;
    da(s,sa,n,128);
    calheight(s,sa,n);
    int maxx=0;
    for(int i=1;i<=n;++i)
     {
         if(height[i]>maxx)
         {
             if(sa[i-1]<=l1&&sa[i]>l1||sa[i-1]>l1&&sa[i]<=l1) maxx=height[i];
         }
     }
    cout<<maxx<<endl;
}